{"remainingRequest":"C:\\dialogflow-web-v2-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\dialogflow-web-v2-master\\src\\components\\ChatField.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\dialogflow-web-v2-master\\src\\components\\ChatField.vue","mtime":1612196699000},{"path":"C:\\dialogflow-web-v2-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\dialogflow-web-v2-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\dialogflow-web-v2-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\dialogflow-web-v2-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBBdWRpb1JlY29yZGVyIGZyb20gJ2F1ZGlvLXJlY29yZGVyLXBvbHlmaWxsJwppbXBvcnQgKiBhcyBoYXJrIGZyb20gJ2hhcmsnCgp3aW5kb3cuTWVkaWFSZWNvcmRlciA9IEF1ZGlvUmVjb3JkZXIKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdDaGF0RmllbGQnLAogICAgZGF0YSgpewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIHF1ZXJ5OiAnJywKICAgICAgICAgICAgbWljcm9waG9uZTogZmFsc2UsCiAgICAgICAgICAgIHJlY29nbml0aW9uOiBudWxsLAogICAgICAgICAgICByZWNvcmRlcjogbnVsbCwKICAgICAgICAgICAgc2hvdWxkX2xpc3RlbjogZmFsc2UsCiAgICAgICAgICAgIGRpc2FibGVkOiBmYWxzZQogICAgICAgIH0KICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICAgIG1pY3JvcGhvbmVfc3VwcG9ydGVkKCl7CiAgICAgICAgICAgIHJldHVybiB3aW5kb3cud2Via2l0U3BlZWNoUmVjb2duaXRpb24gfHwgd2luZG93LlNwZWVjaFJlY29nbml0aW9uIHx8ICF3aW5kb3cuTWVkaWFSZWNvcmRlci5ub3RTdXBwb3J0ZWQKICAgICAgICB9CiAgICB9LAogICAgd2F0Y2g6IHsKICAgICAgICAvKiBUb2dnbGUgbWljcm9waG9uZSAqLwogICAgICAgIG1pY3JvcGhvbmUoYWN0aXZhdGUpewogICAgICAgICAgICBpZiAoYWN0aXZhdGUpewogICAgICAgICAgICAgICAgdGhpcy5zaG91bGRfbGlzdGVuID0gdHJ1ZQogICAgICAgICAgICAgICAgdGhpcy4kZW1pdCgnbGlzdGVuaW5nJykKCiAgICAgICAgICAgICAgICBpZiAod2luZG93LndlYmtpdFNwZWVjaFJlY29nbml0aW9uIHx8IHdpbmRvdy5TcGVlY2hSZWNvZ25pdGlvbil7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZWNvZ25pdGlvbiA9IG5ldyB3aW5kb3cud2Via2l0U3BlZWNoUmVjb2duaXRpb24oKSB8fCBuZXcgd2luZG93LlNwZWVjaFJlY29nbml0aW9uKCkKICAgICAgICAgICAgICAgICAgICB0aGlzLnJlY29nbml0aW9uLmludGVyaW1SZXN1bHRzID0gdHJ1ZQogICAgICAgICAgICAgICAgICAgIHRoaXMucmVjb2duaXRpb24ubGFuZyA9IHRoaXMubGFuZygpCiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZWNvZ25pdGlvbi5vbnJlc3VsdCA9IGV2ZW50ID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IGV2ZW50LnJlc3VsdEluZGV4OyBpIDwgZXZlbnQucmVzdWx0cy5sZW5ndGg7ICsraSl7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnF1ZXJ5ID0gZXZlbnQucmVzdWx0c1tpXVswXS50cmFuc2NyaXB0IC8vIDwtIHB1c2ggcmVzdWx0cyB0byB0aGUgVGV4dCBpbnB1dAogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICB0aGlzLnJlY29nbml0aW9uLm9uZW5kID0gKCkgPT4gewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJlY29nbml0aW9uLnN0b3AoKQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1pY3JvcGhvbmUgPSBmYWxzZQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN1Ym1pdCh7dGV4dDogdGhpcy5xdWVyeX0pIC8vIDwtIHN1Ym1pdCB0aGUgcmVzdWx0CiAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICB0aGlzLnJlY29nbml0aW9uLm9uZXJyb3IgPSAoKSA9PiB0aGlzLm1pY3JvcGhvbmUgPSBmYWxzZQogICAgICAgICAgICAgICAgICAgIHRoaXMucmVjb2duaXRpb24uc3RhcnQoKQogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGVsc2UgaWYgKHdpbmRvdy5NZWRpYVJlY29yZGVyKXsKICAgICAgICAgICAgICAgICAgICBuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYSh7YXVkaW86IHRydWV9KQogICAgICAgICAgICAgICAgICAgIC50aGVuKHN0cmVhbSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmVjb3JkZXIgPSBuZXcgd2luZG93Lk1lZGlhUmVjb3JkZXIoc3RyZWFtKQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJlY29yZGVyLmFkZEV2ZW50TGlzdGVuZXIoJ2RhdGFhdmFpbGFibGUnLCByZWNvcmRpbmcgPT4gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZGVyLnJlYWRBc0RhdGFVUkwocmVjb3JkaW5nLmRhdGEpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkZXIub25sb2FkZW5kID0gKCkgPT4gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc3VibWl0KHthdWRpbzogcmVhZGVyLnJlc3VsdC5yZXBsYWNlKC9eZGF0YTouKztiYXNlNjQsLywgJycpfSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSkKCiAgICAgICAgICAgICAgICAgICAgICAgIGhhcmsodGhpcy5yZWNvcmRlci5zdHJlYW0pLm9uKCdzdG9wcGVkX3NwZWFraW5nJywgKCkgPT4gdGhpcy5taWNyb3Bob25lID0gZmFsc2UpIC8vIDwtIFNwZWVjaCBlbmQgZGV0ZWN0aW9uCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmVjb3JkZXIuc3RhcnQoKQogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgLmNhdGNoKCgpID0+IHRoaXMubWljcm9waG9uZSA9IGZhbHNlKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICBlbHNlIGlmICh0aGlzLnJlY29nbml0aW9uKSB0aGlzLnJlY29nbml0aW9uLmFib3J0KCkKICAgICAgICAgICAgZWxzZSBpZiAodGhpcy5yZWNvcmRlcikgdGhpcy5yZWNvcmRlci5zdG9wKCkKICAgICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIGxpc3RlbigpewogICAgICAgICAgICBpZiAodGhpcy5zaG91bGRfbGlzdGVuKSB0aGlzLm1pY3JvcGhvbmUgPSB0cnVlCiAgICAgICAgfSwKICAgICAgICBzdWJtaXQoc3VibWlzc2lvbil7CiAgICAgICAgICAgIGlmIChzdWJtaXNzaW9uLnRleHQgJiYgc3VibWlzc2lvbi50ZXh0Lmxlbmd0aCA+IDApewogICAgICAgICAgICAgICAgdGhpcy4kZW1pdCgnc3VibWl0Jywgc3VibWlzc2lvbikKICAgICAgICAgICAgICAgIHRoaXMucXVlcnkgPSAnJwogICAgICAgICAgICB9CgogICAgICAgICAgICBlbHNlIGlmIChzdWJtaXNzaW9uLmF1ZGlvKSB0aGlzLiRlbWl0KCdzdWJtaXQnLCBzdWJtaXNzaW9uKQogICAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["ChatField.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4HA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"ChatField.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"chat-field\">\n        <div class=\"chat-field-container\">\n            <!-- Here are the suggestions -->\n            <transition name=\"chat-field-suggestions-animation\">\n                <div v-if=\"query.length == 0\" class=\"chat-field-suggestions\"><slot /></div>\n            </transition>\n            <div class=\"chat-field-flexible\">\n                <!-- Text input -->\n                <input\n                    v-model=\"query\"\n                    class=\"chat-field-input\"\n                    type=\"text\"\n                    autofocus\n                    :placeholder=\"(translations[lang()] && translations[lang()].inputTitle) || translations[config.fallback_lang].inputTitle\"\n                    :aria-label=\"(translations[lang()] && translations[lang()].inputTitle) || translations[config.fallback_lang].inputTitle\"\n                    :disabled=\"disabled\"\n                    @keypress.enter=\"submit({text: query})\"\n                    @focus=\"microphone = false; should_listen = false; $emit('typing')\">\n\n                <!-- Send message button (arrow button) -->\n                <transition name=\"chat-field-button-animation\" mode=\"out-in\">\n                    <button\n                        v-if=\"!microphone && query.length > 0 || !microphone_supported\"\n                        key=\"send\"\n                        class=\"chat-field-action\"\n                        :title=\"(translations[lang()] && translations[lang()].sendTitle) || translations[config.fallback_lang].sendTitle\"\n                        :aria-label=\"(translations[lang()] && translations[lang()].sendTitle) || translations[config.fallback_lang].sendTitle\"\n                        :disabled=\"disabled\"\n                        @click=\"submit({text: query})\">\n                        <i class=\"material-icons\" aria-hidden=\"true\">arrow_upward</i>\n                    </button>\n\n                    <!-- Microphone Button -->\n                    <button\n                        v-else\n                        key=\"microphone\"\n                        class=\"chat-field-action\"\n                        :aria-label=\"(translations[lang()] && translations[lang()].microphoneTitle) || translations[config.fallback_lang].microphoneTitle\"\n                        :title=\"(translations[lang()] && translations[lang()].microphoneTitle) || translations[config.fallback_lang].microphoneTitle\"\n                        :class=\"{'mic_active': microphone}\"\n                        :disabled=\"disabled\"\n                        @click=\"microphone = !microphone\">\n                        <i class=\"material-icons\" aria-hidden=\"true\">mic</i>\n                    </button>\n                </transition>\n            </div>\n        </div>\n    </div>\n</template>\n\n<style lang=\"sass\" scoped>\n@import '@/style/mixins'\n\n.chat-field\n    position: fixed\n    bottom: 0\n    left: 0\n    width: 100%\n    background-color: var(--background)\n    z-index: 2\n\n.chat-field-container\n    max-width: var(--container-width)\n    margin: auto auto\n    padding: 12px\n\n.chat-field-flexible\n    display: flex\n    border-radius: 40px\n    border: var(--border)\n\n.chat-field-suggestions\n    overflow-x: scroll\n    overflow-y: hidden\n    white-space: nowrap\n    -webkit-overflow-scrolling: touch\n\n    &::-webkit-scrollbar\n        display: none\n\n.chat-field-input\n    font-size: 16px\n    width: 100%\n    box-sizing: border-box\n    border: none\n    padding: 10px 0 10px 12px\n    color: var(--text-primary)\n    border-radius: 40px 0 0 40px\n    background-color: transparent\n\n    &:disabled\n        cursor: not-allowed\n\n.chat-field-action\n    @include reset\n    padding: 10px 12px\n    cursor: pointer\n    color: var(--accent)\n    font-size: 24px\n    display: flex\n\n    &:disabled\n        cursor: not-allowed\n\n    &.mic_active\n        color: #F44336\n\n.chat-field-suggestions-animation-enter-active, .chat-field-suggestions-animation-leave-active\n    transition: all .15s var(--animation-timing)\n\n.chat-field-suggestions-animation-enter, .chat-field-suggestions-animation-leave-to\n    transform: translateY(10px)\n    opacity: 0\n\n.chat-field-button-animation-enter-active, .chat-field-button-animation-leave-active\n    transition: all .15s var(--animation-timing)\n\n.chat-field-button-animation-enter, .chat-field-button-animation-leave-to\n    transform: scale(0)\n    opacity: 0\n</style>\n\n<script>\nimport AudioRecorder from 'audio-recorder-polyfill'\nimport * as hark from 'hark'\n\nwindow.MediaRecorder = AudioRecorder\n\nexport default {\n    name: 'ChatField',\n    data(){\n        return {\n            query: '',\n            microphone: false,\n            recognition: null,\n            recorder: null,\n            should_listen: false,\n            disabled: false\n        }\n    },\n    computed: {\n        microphone_supported(){\n            return window.webkitSpeechRecognition || window.SpeechRecognition || !window.MediaRecorder.notSupported\n        }\n    },\n    watch: {\n        /* Toggle microphone */\n        microphone(activate){\n            if (activate){\n                this.should_listen = true\n                this.$emit('listening')\n\n                if (window.webkitSpeechRecognition || window.SpeechRecognition){\n                    this.recognition = new window.webkitSpeechRecognition() || new window.SpeechRecognition()\n                    this.recognition.interimResults = true\n                    this.recognition.lang = this.lang()\n                    this.recognition.onresult = event => {\n                        for (let i = event.resultIndex; i < event.results.length; ++i){\n                            this.query = event.results[i][0].transcript // <- push results to the Text input\n                        }\n                    }\n\n                    this.recognition.onend = () => {\n                        this.recognition.stop()\n                        this.microphone = false\n                        this.submit({text: this.query}) // <- submit the result\n                    }\n\n                    this.recognition.onerror = () => this.microphone = false\n                    this.recognition.start()\n                }\n\n                else if (window.MediaRecorder){\n                    navigator.mediaDevices.getUserMedia({audio: true})\n                    .then(stream => {\n                        this.recorder = new window.MediaRecorder(stream)\n                        this.recorder.addEventListener('dataavailable', recording => {\n                            const reader = new FileReader()\n                            reader.readAsDataURL(recording.data)\n                            reader.onloadend = () => {\n                                this.submit({audio: reader.result.replace(/^data:.+;base64,/, '')})\n                            }\n                        })\n\n                        hark(this.recorder.stream).on('stopped_speaking', () => this.microphone = false) // <- Speech end detection\n                        this.recorder.start()\n                    })\n                    .catch(() => this.microphone = false)\n                }\n            }\n\n            else if (this.recognition) this.recognition.abort()\n            else if (this.recorder) this.recorder.stop()\n        }\n    },\n    methods: {\n        listen(){\n            if (this.should_listen) this.microphone = true\n        },\n        submit(submission){\n            if (submission.text && submission.text.length > 0){\n                this.$emit('submit', submission)\n                this.query = ''\n            }\n\n            else if (submission.audio) this.$emit('submit', submission)\n        }\n    }\n}\n</script>\n"]}]}